'use strict';

var core = require('@xrpl-wallet-standard/core');
var utils = require('@xrplf/isomorphic/utils');

class XRPLBaseWallet {
}

class XRPLWalletAccount {
  #publicKey;
  #address;
  get address() {
    return this.#address;
  }
  get publicKey() {
    return this.#publicKey.slice();
  }
  get chains() {
    return [core.XRPL_MAINNET];
  }
  get features() {
    return ["xrpl:signTransaction", "xrpl:signAndSubmitTransaction"];
  }
  constructor(address) {
    if (new.target === XRPLWalletAccount) {
      Object.freeze(this);
    }
    this.#address = address;
  }
}

Object.defineProperty(exports, "bytesToHex", {
  enumerable: true,
  get: function () { return utils.bytesToHex; }
});
Object.defineProperty(exports, "hexToBytes", {
  enumerable: true,
  get: function () { return utils.hexToBytes; }
});
exports.XRPLBaseWallet = XRPLBaseWallet;
exports.XRPLWalletAccount = XRPLWalletAccount;
